1. GPU Dashboard has been successfully deployed!

2. Check the application status with the following commands:
   kubectl get pods -l "app.kubernetes.io/instance={{ .Release.Name }}" -n {{ .Release.Namespace }}

3. To access the Frontend service:
{{- if contains "NodePort" .Values.frontend.service.type }}
   export NODE_IP=$(kubectl get nodes -o jsonpath="{.items[0].status.addresses[0].address}")
   echo "Frontend URL: http://$NODE_IP:{{ .Values.frontend.service.nodePort }}"
{{- else if contains "LoadBalancer" .Values.frontend.service.type }}
     NOTE: It may take some time to get the External IP for LoadBalancer type.
   export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ .Release.Name }}-frontend --template "{{ "{{" }} range (index .status.loadBalancer.ingress 0) {{ "}}" }}{{ "{{" }}.{{ "}}" }}{{ "{{" }} end {{ "}}" }}")
   echo "Frontend URL: http://$SERVICE_IP:{{ .Values.frontend.service.port }}"
{{- else }}
   kubectl --namespace {{ .Release.Namespace }} port-forward svc/{{ .Release.Name }}-frontend 8080:80
   echo "Frontend URL: http://127.0.0.1:8080"
{{- end }}

4. To access the Backend API:
{{- if contains "NodePort" .Values.backend.service.type }}
   export NODE_IP=$(kubectl get nodes -o jsonpath="{.items[0].status.addresses[0].address}")
   echo "Backend API URL: http://$NODE_IP:{{ .Values.backend.service.nodePort }}/docs"
{{- else if contains "LoadBalancer" .Values.backend.service.type }}
   export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ .Release.Name }}-backend --template "{{ "{{" }} range (index .status.loadBalancer.ingress 0) {{ "}}" }}{{ "{{" }}.{{ "}}" }}{{ "{{" }} end {{ "}}" }}")
   echo "Backend API URL: http://$SERVICE_IP:{{ .Values.backend.service.port }}/docs"
{{- else }}
   kubectl --namespace {{ .Release.Namespace }} port-forward svc/{{ .Release.Name }}-backend 8000:8000
   echo "Backend API URL: http://127.0.0.1:8000/docs"
{{- end }}

5. To access Data Observer:
   kubectl --namespace {{ .Release.Namespace }} port-forward svc/{{ .Release.Name }}-data-observer 8001:8000
   echo "Data Observer API URL: http://127.0.0.1:8001/docs"

{{- if .Values.postgresql.enabled }}
6. To access the PostgreSQL database:
   export POSTGRES_PASSWORD=$(kubectl get secret --namespace {{ .Release.Namespace }} {{ .Release.Name }}-postgresql -o jsonpath="{.data.postgres-password}" | base64 -d)
   kubectl run {{ .Release.Name }}-postgresql-client --rm --tty -i --restart='Never' --namespace {{ .Release.Namespace }} --image docker.io/bitnami/postgresql:15 --env="PGPASSWORD=$POSTGRES_PASSWORD" \
      --command -- psql --host {{ .Release.Name }}-postgresql --username postgres --dbname {{ .Values.postgresql.auth.database }} --port 5432
{{- end }}

=== Service Port Information ===
- Frontend: NodePort {{ .Values.frontend.service.nodePort }}
- Backend: NodePort {{ .Values.backend.service.nodePort }}
- Data Observer: ClusterIP (port forwarding required)

To check the node IP of the cluster:
kubectl get nodes -o wide

